% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/freq_distribution.R
\name{freq_distribution}
\alias{freq_distribution}
\title{Plot Frequency Distribution and Density Plots}
\usage{
freq_distribution(
  data,
  trait,
  genotype = NULL,
  hist = TRUE,
  hist.col = "gray45",
  hist.border = TRUE,
  hist.border.col = "black",
  hist.alpha = 0.8,
  bw.adjust = 0.5,
  density = TRUE,
  density.col = "black",
  density.fill = "gray45",
  density.alpha = 0.1,
  normal.curve = TRUE,
  normal.curve.col = "black",
  normal.curve.linetype = "solid",
  highlight.mean = TRUE,
  highlight.mean.col = "black",
  show.counts = TRUE,
  count.text.col = "black",
  count.text.size = 3,
  highlight.genotype.vline = FALSE,
  highlight.genotype.pointrange = FALSE,
  highlights = NULL,
  highlight.col = highlight.mean.col,
  standardize.xrange = TRUE
)
}
\arguments{
\item{data}{The data as a data frame object. The data frame should possess
columns specifying the trait (and genotypes if \code{highlight.genotype.* =
TRUE}).}

\item{trait}{Name of column specifying the trait as a character string. The
trait column should be of type \code{"numeric"} for quantitative traits and
of type \code{"factor"} for qualitative traits.}

\item{genotype}{Name of column specifying the group as a character string.
Required only when \code{highlight.genotype.* =  TRUE}.}

\item{hist}{logical. If \code{TRUE}, the histogram is plotted. Default is
\code{TRUE}.}

\item{hist.col}{The histograme colour.}

\item{hist.border}{logical. If \code{TRUE}, histogram border is also plotted.
Default is \code{TRUE}.}

\item{hist.border.col}{The histogram border colour.}

\item{hist.alpha}{Alpha transparency for the histogram.}

\item{bw.adjust}{Multiplicative bin width adjustment. Default is 0.5 which
means use half of the default bandwidth.}

\item{density}{logical. If \code{TRUE}, the kernel density is plotted.
Default is \code{TRUE}.}

\item{density.col}{The kernel density colour.}

\item{density.fill}{The kernel density fill colour.}

\item{density.alpha}{Alpha transparency for the kernel density}

\item{normal.curve}{logical. If \code{TRUE}, a normal curve is plotted.
Default is \code{TRUE}.}

\item{normal.curve.col}{The colour of the normal curve.}

\item{normal.curve.linetype}{Linetype for the normal curve. See
\code{\link[ggplot2]{aes_linetype_size_shape}}.}

\item{highlight.mean}{logical. If \code{TRUE}, the mean value is highlighted
as a vertical line. Default is \code{TRUE}.}

\item{highlight.mean.col}{The colour of the vertical line representing mean.}

\item{show.counts}{If \code{TRUE}, group wise counts are plotted as a text
annotation. Default is \code{TRUE}.}

\item{count.text.col}{The colour of the count text annotation.}

\item{count.text.size}{The size of the count text annotation.}

\item{highlight.genotype.vline}{logical. If \code{TRUE}, the mean values of
genotypes specified in \code{highlights} are plotted as vertical lines.}

\item{highlight.genotype.pointrange}{logical. If \code{TRUE}, the mean Â±
stand error values of genotypes specified in \code{highlights} are plotted
as a separate pointrange plot.}

\item{highlights}{The genotypes to be highlighted as a character vector.}

\item{highlight.col}{The colour(s) to be used to highlight genotypes
specified in \code{highlights} in the plot as a character vector. Must be
valid colour values in R (named colours, hexadecimal representation, index
of colours [\code{1:8}] in default R \code{palette()} etc.).}

\item{standardize.xrange}{logical. If \code{TRUE}, the original plot and the
pointrange plot x axis ranges are standardized. Default is \code{TRUE}.}
}
\value{
Either the frequency distribution plot as a histogram or kernel
  density \code{ggplot2} object, or a list containing a \code{ggplot2}
  pointrange plot and the histogram/kernel density plot.
}
\description{
Plot Frequency Distribution and Density Plots
}
\examples{
library(agridat)
library(ggplot2)
library(patchwork)
library(dplyr)

soydata <- australia.soybean
soydata$gen <- as.character(soydata$gen)
checks <- c("G01", "G05")

check_cols <- c("#B2182B", "#2166AC")

quant_traits <- c("yield", "height", "lodging",
                  "size", "protein", "oil")
set.seed(123)
soydata <-
  soydata \%>\%
  mutate(
    across(
      .cols = all_of(quant_traits),
      .fns = ~factor(cut(.x, breaks = quantile(.x, na.rm = TRUE),
                         include.lowest = TRUE),
                     labels = sample(1:9, size = 4)),
      .names = "{.col}_score"
    )
  )

qual_traits <- c("yield_score", "height_score", "lodging_score",
                 "size_score", "protein_score", "oil_score")


# Frequency distribution as histogram
freq_hist1 <-
  freq_distribution(data = soydata, trait = "lodging",
                    hist = TRUE,
                    hist.col = "lemonchiffon",
                    density = FALSE,
                    normal.curve = FALSE, highlight.mean = FALSE,
                    show.counts = FALSE)
freq_hist1

# Frequency distribution as histogram with normal curve
freq_hist2 <-
  freq_distribution(data = soydata, trait = "lodging",
                    hist = TRUE,
                    hist.col = "lemonchiffon",
                    density = FALSE,
                    normal.curve = TRUE, normal.curve.col = "blue",
                    highlight.mean = FALSE,
                    show.counts = FALSE)
freq_hist2

# Frequency distribution as histogram with mean highlighted
freq_hist3 <-
  freq_distribution(data = soydata, trait = "lodging",
                    hist = TRUE,
                    hist.col = "lemonchiffon",
                    density = FALSE, normal.curve = FALSE,
                    highlight.mean = TRUE, highlight.mean.col = "red",
                    show.counts = FALSE)
freq_hist3

# Frequency distribution as histogram with count value
freq_hist4 <-
  freq_distribution(data = soydata, trait = "lodging",
                    hist = TRUE,
                    hist.col = "lemonchiffon",
                    density = FALSE, normal.curve = FALSE,
                    highlight.mean = FALSE,
                    show.counts = TRUE, count.text.col = "red")
freq_hist4

# Frequency distribution as histogram with check values
# highlighted as vertical lines
freq_hist5 <-
  freq_distribution(data = soydata, trait = "lodging",
                    hist = TRUE,
                    hist.col = "lemonchiffon",
                    density = FALSE, normal.curve = FALSE,
                    highlight.mean = FALSE, show.counts = FALSE,
                    genotype = "gen",
                    highlight.genotype.vline = TRUE, highlights = checks,
                    highlight.col = check_cols)
freq_hist5

# Frequency distribution as histogram with check values
# highlighted as a separate pointrange plot
freq_hist6 <-
  freq_distribution(data = soydata, trait = "lodging",
                    hist = TRUE,
                    hist.col = "lemonchiffon",
                    density = FALSE, normal.curve = FALSE,
                    highlight.mean = FALSE, show.counts = FALSE,
                    genotype = "gen",
                    highlight.genotype.vline = TRUE,
                    highlight.genotype.pointrange = TRUE,
                    highlights = checks,
                    highlight.col = check_cols)
freq_hist6[[1]] <-
  freq_hist6[[1]] +
  theme(axis.ticks.x = element_blank(),
        axis.text.x = element_blank())
wrap_plots(freq_hist6[[1]], plot_spacer(), freq_hist6[[2]],
           ncol = 1, heights = c(1, -0.5, 4))

# Frequency distribution as kernel density plot
freq_dens1 <-
  freq_distribution(data = soydata, trait = "lodging",
                    hist = FALSE,
                    density = TRUE,
                    density.fill = "lemonchiffon",
                    normal.curve = FALSE, highlight.mean = FALSE,
                    show.counts = FALSE)
freq_dens1

# Frequency distribution as kernel density plot with mean highlighted
freq_dens2 <-
  freq_distribution(data = soydata, trait = "lodging",
                    hist = FALSE,
                    density = TRUE,
                    density.fill = "lemonchiffon",
                    normal.curve = FALSE,
                    highlight.mean = TRUE, highlight.mean.col = "red",
                    show.counts = FALSE)
freq_dens2

# Frequency distribution as kernel density plot with count value
freq_dens3 <-
  freq_distribution(data = soydata, trait = "lodging",
                    hist = FALSE,
                    density = TRUE,
                    density.fill = "lemonchiffon",
                    normal.curve = FALSE,
                    highlight.mean = FALSE,
                    show.counts = TRUE, count.text.col = "red")
freq_dens3

# Frequency distribution as kernel density plot with check values
# highlighted as vertical lines
freq_dens4 <-
  freq_distribution(data = soydata, trait = "lodging",
                    hist = FALSE,
                    density = TRUE,
                    density.fill = "lemonchiffon",
                    normal.curve = FALSE,
                    highlight.mean = FALSE, show.counts = FALSE,
                    genotype = "gen",
                    highlight.genotype.vline = TRUE, highlights = checks,
                    highlight.col = check_cols)
freq_dens4

# Frequency distribution as kernel density plot with check values
# highlighted as a separate pointrange plot
freq_dens5 <-
  freq_distribution(data = soydata, trait = "lodging",
                    hist = FALSE,
                    density = TRUE,
                    density.fill = "lemonchiffon",
                    normal.curve = FALSE,
                    highlight.mean = FALSE, show.counts = FALSE,
                    genotype = "gen",
                    highlight.genotype.vline = TRUE,
                    highlight.genotype.pointrange = TRUE,
                    highlights = checks,
                    highlight.col = check_cols)
freq_dens5[[1]] <-
  freq_dens5[[1]] +
  theme(axis.ticks.x = element_blank(),
        axis.text.x = element_blank())
wrap_plots(freq_dens5[[1]], plot_spacer(), freq_dens5[[2]],
           ncol = 1, heights = c(1, -0.5, 4))

# Frequency counts of categorical data as a bar plot
freq_bar1 <-
  freq_distribution(data = soydata, trait = "lodging_score",
                    hist = TRUE,
                    hist.col = "lemonchiffon")
freq_bar1

# Frequency counts of categorical data as a bar plot with check values
# highlighted as vertical lines
freq_bar2 <-
  freq_distribution(data = soydata, trait = "lodging_score",
                    hist = TRUE,
                    hist.col = "lemonchiffon",
                    genotype = "gen",
                    highlight.genotype.vline = TRUE,
                    highlights = checks,
                    highlight.col = check_cols)
freq_bar2

# Frequency counts of categorical data as a bar plot with check values
# highlighted as a separate pointrange plot
freq_bar3 <- freq_distribution(data = soydata, trait = "lodging_score",
                               hist = TRUE,
                               hist.col = "lemonchiffon",
                               genotype = "gen",
                               highlight.genotype.vline = TRUE,
                               highlight.genotype.pointrange = TRUE,
                               highlights = checks,
                               highlight.col = check_cols)
freq_bar3

}
