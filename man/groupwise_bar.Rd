% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/groupwise_bar.R
\name{groupwise_bar}
\alias{groupwise_bar}
\title{Plot Group-wise Bar Plots}
\usage{
groupwise_bar(
  data,
  group,
  trait,
  bar.border = TRUE,
  bar.alpha = 0.8,
  by = c("group", "trait"),
  relative.freq = FALSE,
  subset = c("facet", "none"),
  na.rm = TRUE,
  include.overall = TRUE,
  background.bar = TRUE,
  background.bar.alpha = 0.25,
  show.counts = TRUE,
  count.text.size = 3,
  position = c("dodge", "stack"),
  ncol = NULL,
  nrow = NULL
)
}
\arguments{
\item{data}{The data as a data frame object. The data frame should possess
columns specifying the group and trait.}

\item{group}{Name of column specifying the group as a character string.}

\item{trait}{Name of column specifying the trait as a character string.}

\item{bar.border}{logical. If \code{TRUE}, bar border is also plotted.
Default is \code{TRUE}.}

\item{bar.alpha}{Alpha transparency for the group-wise bar plot.}

\item{by}{The factor according to which the bars have to be grouped. Either
\code{"group"} or \code{"trait"}.}

\item{relative.freq}{logical. If \code{TRUE}, the relative frequency or
proportion is plotted instead of counts. Default is \code{FALSE}.}

\item{subset}{The method for subsetting the plots according to the argument
\code{"group"}. Either \code{"facet"} for getting an plot using faceting in
\code{ggplot2} or \code{"list"} for getting a list of plots.}

\item{na.rm}{logical. If \code{TRUE}, the \code{NA} factor levels are
excluded from the plot. Default is \code{TRUE}.}

\item{include.overall}{logical. If \code{TRUE}, the overall or total data is
also plotted. Default is \code{TRUE}.}

\item{background.bar}{logical. If \code{TRUE}, the overall data is plotted as
a background bar plot when \code{by = "group"}, \code{include.overall =
TRUE}, and \code{position = "dodge"}. Default is \code{TRUE}.}

\item{background.bar.alpha}{Alpha transparency for the background bar plot.}

\item{show.counts}{logical. If \code{TRUE}, group wise counts are plotted as
a text annotation. Default is \code{TRUE}.}

\item{count.text.size}{The size of the count text annotation.}

\item{position}{Bar position adjustment. Either "dodge" or "stack".}

\item{ncol}{Number of columns when \code{subset = "facet"}.}

\item{nrow}{Number of rows when \code{subset = "facet"}.}
}
\value{
The group-wise bar plot as a \code{ggplot2} plot grob or as a list of
  \code{ggplot2} plot grobs.
}
\description{
Plot Group-wise Bar Plots
}
\examples{
library(agridat)
library(ggplot2)
library(patchwork)

soydata <- australia.soybean

clrs <- c("#B2182B", "#2166AC", "#009E53", "#E69F00", "gray25")
clrs_dark <- colorspace::darken(clrs, amount = 0.2)

soydata$lodging <- cut(soydata$lodging,
                       breaks = quantile(soydata$lodging),
                       include.lowest = TRUE)
levels(soydata$lodging) <- 1:4


# Group-wise side-by-side bar plot with counts ----

outg_group_dodge_count <-
  groupwise_bar(data = soydata, group = "loc", trait = "lodging",
                bar.border = TRUE, by = "group",
                subset = "none", position = "dodge")

outg_group_dodge_count

outg_group_dodge_count +
  scale_fill_manual(values = clrs) +
  scale_colour_manual(values = clrs_dark)

outg_group_dodge_count_facet <-
  groupwise_bar(data = soydata, group = "loc", trait = "lodging",
                bar.border = TRUE, by = "group",
                subset = "facet", position = "dodge")

outg_group_dodge_count_facet

outg_group_dodge_count_facet +
  scale_fill_manual(values = clrs) +
  scale_colour_manual(values = clrs_dark)

outg_group_dodge_count_list <-
  groupwise_bar(data = soydata, group = "loc", trait = "lodging",
                bar.border = TRUE, by = "group",
                subset = "list", position = "dodge")

wrap_plots(outg_group_dodge_count_list, nrow = 2, guides = "collect")

outg_group_dodge_count_list <-
  lapply(seq_along(outg_group_dodge_count_list), function(i) {
    outg_group_dodge_count_list[[i]] +
      scale_fill_manual(values = clrs[i]) +
      scale_colour_manual(values = clrs_dark[i])
  })

wrap_plots(outg_group_dodge_count_list, nrow = 2, guides = "collect")

# Group-wise side-by-side bar plot with relative frequencies ----

outg_group_dodge_rfreq <-
  groupwise_bar(data = soydata, group = "loc", trait = "lodging",
                bar.border = TRUE, by = "group",
                relative.freq = TRUE,
                subset = "none", position = "dodge")

outg_group_dodge_rfreq

outg_group_dodge_rfreq +
  scale_fill_manual(values = clrs) +
  scale_colour_manual(values = clrs_dark)

outg_group_dodge_rfreq_facet <-
  groupwise_bar(data = soydata, group = "loc", trait = "lodging",
                bar.border = TRUE, by = "group",
                relative.freq = TRUE,
                subset = "facet", position = "dodge")

outg_group_dodge_rfreq_facet

outg_group_dodge_rfreq_facet +
  scale_fill_manual(values = clrs) +
  scale_colour_manual(values = clrs_dark)

outg_group_dodge_rfreq_list <-
  groupwise_bar(data = soydata, group = "loc", trait = "lodging",
                bar.border = TRUE, by = "group",
                relative.freq = TRUE,
                subset = "list", position = "dodge")

wrap_plots(outg_group_dodge_rfreq_list, nrow = 2, guides = "collect")

outg_group_dodge_rfreq_list <-
  lapply(seq_along(outg_group_dodge_rfreq_list), function(i) {
    outg_group_dodge_rfreq_list[[i]] +
      scale_fill_manual(values = clrs[i]) +
      scale_colour_manual(values = clrs_dark[i])
  })

wrap_plots(outg_group_dodge_rfreq_list, nrow = 2, guides = "collect")

# Group-wise stacked bar plot with counts ----

outg_group_stack_count <-
  groupwise_bar(data = soydata, group = "loc", trait = "lodging",
                bar.border = TRUE, by = "group",
                subset = "none", position = "stack")

outg_group_stack_count

outg_group_stack_count +
  scale_fill_manual(values = clrs) +
  scale_colour_manual(values = clrs_dark)

outg_group_stack_count_facet <-
  groupwise_bar(data = soydata, group = "loc", trait = "lodging",
                bar.border = TRUE, by = "group",
                subset = "facet", position = "stack")

outg_group_stack_count_facet

outg_group_stack_count_facet +
  scale_fill_manual(values = clrs) +
  scale_colour_manual(values = clrs_dark)

outg_group_stack_count_list <-
  groupwise_bar(data = soydata, group = "loc", trait = "lodging",
                bar.border = TRUE, by = "group",
                subset = "list", position = "stack")

wrap_plots(outg_group_stack_count_list, nrow = 2, guides = "collect")

outg_group_stack_count_list <-
  lapply(seq_along(outg_group_stack_count_list), function(i) {
    outg_group_stack_count_list[[i]] +
      scale_fill_manual(values = clrs) +
      scale_colour_manual(values = clrs_dark)
  })

wrap_plots(outg_group_stack_count_list, nrow = 2, guides = "collect")

# Group-wise stacked bar plot with relative frequencies ----

outg_group_stack_rfreq <-
  groupwise_bar(data = soydata, group = "loc", trait = "lodging",
                bar.border = TRUE, by = "group",
                relative.freq = TRUE,
                subset = "none", position = "stack")

outg_group_stack_rfreq

outg_group_stack_rfreq +
  scale_fill_manual(values = clrs) +
  scale_colour_manual(values = clrs_dark)

outg_group_stack_rfreq_facet <-
  groupwise_bar(data = soydata, group = "loc", trait = "lodging",
                bar.border = TRUE, by = "group",
                relative.freq = TRUE,
                subset = "facet", position = "stack")

outg_group_stack_rfreq_facet

outg_group_stack_rfreq_facet +
  scale_fill_manual(values = clrs) +
  scale_colour_manual(values = clrs_dark)

outg_group_stack_rfreq_list <-
  groupwise_bar(data = soydata, group = "loc", trait = "lodging",
                bar.border = TRUE, by = "group",
                relative.freq = TRUE,
                subset = "list", position = "stack")

wrap_plots(outg_group_stack_rfreq_list, nrow = 2, guides = "collect")

outg_group_stack_rfreq_list <-
  lapply(seq_along(outg_group_stack_rfreq_list), function(i) {
    outg_group_stack_rfreq_list[[i]] +
      scale_fill_manual(values = clrs) +
      scale_colour_manual(values = clrs_dark)
  })

wrap_plots(outg_group_stack_count_list, nrow = 2, guides = "collect")

# Trait-wise side-by-side bar plot with counts ----

# Trait-
#   _trait_
#   by = "trait"

# Trait-wise side-by-side bar plot with counts ----

outg_trait_dodge_count <-
  groupwise_bar(data = soydata, group = "loc", trait = "lodging",
                bar.border = TRUE, by = "trait",
                subset = "none", position = "dodge")

outg_trait_dodge_count

outg_trait_dodge_count +
  scale_fill_manual(values = clrs) +
  scale_colour_manual(values = clrs_dark)

outg_trait_dodge_count_facet <-
  groupwise_bar(data = soydata, group = "loc", trait = "lodging",
                bar.border = TRUE, by = "trait",
                subset = "facet", position = "dodge")

outg_trait_dodge_count_facet

outg_trait_dodge_count_facet +
  scale_fill_manual(values = clrs) +
  scale_colour_manual(values = clrs_dark)

outg_trait_dodge_count_list <-
  groupwise_bar(data = soydata, group = "loc", trait = "lodging",
                bar.border = TRUE, by = "trait",
                subset = "list", position = "dodge")

wrap_plots(outg_trait_dodge_count_list, nrow = 2, guides = "collect")

outg_trait_dodge_count_list <-
  lapply(seq_along(outg_trait_dodge_count_list), function(i) {
    outg_trait_dodge_count_list[[i]] +
      scale_fill_manual(values = clrs[i]) +
      scale_colour_manual(values = clrs_dark[i])
  })

wrap_plots(outg_trait_dodge_count_list, nrow = 2, guides = "collect")

# Trait-wise side-by-side bar plot with relative frequencies ----

outg_trait_dodge_rfreq <-
  groupwise_bar(data = soydata, group = "loc", trait = "lodging",
                bar.border = TRUE, by = "trait",
                relative.freq = TRUE,
                subset = "none", position = "dodge")

outg_trait_dodge_rfreq

outg_trait_dodge_rfreq +
  scale_fill_manual(values = clrs) +
  scale_colour_manual(values = clrs_dark)

outg_trait_dodge_rfreq_facet <-
  groupwise_bar(data = soydata, group = "loc", trait = "lodging",
                bar.border = TRUE, by = "trait",
                relative.freq = TRUE,
                subset = "facet", position = "dodge")

outg_trait_dodge_rfreq_facet

outg_trait_dodge_rfreq_facet +
  scale_fill_manual(values = clrs) +
  scale_colour_manual(values = clrs_dark)

outg_trait_dodge_rfreq_list <-
  groupwise_bar(data = soydata, group = "loc", trait = "lodging",
                bar.border = TRUE, by = "trait",
                relative.freq = TRUE,
                subset = "list", position = "dodge")

wrap_plots(outg_trait_dodge_rfreq_list, nrow = 2, guides = "collect")

outg_trait_dodge_rfreq_list <-
  lapply(seq_along(outg_trait_dodge_rfreq_list), function(i) {
    outg_trait_dodge_rfreq_list[[i]] +
      scale_fill_manual(values = clrs[i]) +
      scale_colour_manual(values = clrs_dark[i])
  })

wrap_plots(outg_trait_dodge_rfreq_list, nrow = 2, guides = "collect")

# Trait-wise stacked bar plot with counts ----

outg_trait_stack_count <-
  groupwise_bar(data = soydata, group = "loc", trait = "lodging",
                bar.border = TRUE, by = "trait",
                subset = "none", position = "stack")

outg_trait_stack_count

outg_trait_stack_count +
  scale_fill_manual(values = clrs) +
  scale_colour_manual(values = clrs_dark)

outg_trait_stack_count_facet <-
  groupwise_bar(data = soydata, group = "loc", trait = "lodging",
                bar.border = TRUE, by = "trait",
                subset = "facet", position = "stack")

outg_trait_stack_count_facet

outg_trait_stack_count_facet +
  scale_fill_manual(values = clrs) +
  scale_colour_manual(values = clrs_dark)

outg_trait_stack_count_list <-
  groupwise_bar(data = soydata, group = "loc", trait = "lodging",
                bar.border = TRUE, by = "trait",
                subset = "list", position = "stack")

wrap_plots(outg_trait_stack_count_list, nrow = 2, guides = "collect")

outg_trait_stack_count_list <-
  lapply(seq_along(outg_trait_stack_count_list), function(i) {
    outg_trait_stack_count_list[[i]] +
      scale_fill_manual(values = clrs) +
      scale_colour_manual(values = clrs_dark)
  })

wrap_plots(outg_trait_stack_count_list, nrow = 2, guides = "collect")

# Trait-wise stacked bar plot with relative frequencies ----

outg_trait_stack_rfreq <-
  groupwise_bar(data = soydata, group = "loc", trait = "lodging",
                bar.border = TRUE, by = "trait",
                relative.freq = TRUE,
                subset = "none", position = "stack")

outg_trait_stack_rfreq

outg_trait_stack_rfreq +
  scale_fill_manual(values = clrs) +
  scale_colour_manual(values = clrs_dark)

outg_trait_stack_rfreq_facet <-
  groupwise_bar(data = soydata, group = "loc", trait = "lodging",
                bar.border = TRUE, by = "trait",
                relative.freq = TRUE,
                subset = "facet", position = "stack")

outg_trait_stack_rfreq_facet

outg_trait_stack_rfreq_facet +
  scale_fill_manual(values = clrs) +
  scale_colour_manual(values = clrs_dark)

outg_trait_stack_rfreq_list <-
  groupwise_bar(data = soydata, group = "loc", trait = "lodging",
                bar.border = TRUE, by = "trait",
                relative.freq = TRUE,
                subset = "list", position = "stack")

wrap_plots(outg_trait_stack_rfreq_list, nrow = 2, guides = "collect")

outg_trait_stack_rfreq_list <-
  lapply(seq_along(outg_trait_stack_rfreq_list), function(i) {
    outg_trait_stack_rfreq_list[[i]] +
      scale_fill_manual(values = clrs) +
      scale_colour_manual(values = clrs_dark)
  })

wrap_plots(outg_trait_stack_count_list, nrow = 2, guides = "collect")

}
